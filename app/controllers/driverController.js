const DriverRegistration = require('../models/driverRegistrationSchema');

// Register a new driver
exports.registerDriver = async (req, res) => {
  try {
    const newDriver = new DriverRegistration(req.body);
    const savedDriver = await newDriver.save();
    res.status(201).json({
      success: true,
      message: 'Driver registered successfully',
      data: {
        rating: 0.0, // You can provide a default rating here
        driverId: savedDriver._id // Use the ID generated by MongoDB
      }
    });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Failed to register driver', error: error.message });
  }
};

// Update driver information
exports.updateDriver = async (req, res) => {
  try {
    const updatedDriver = await DriverRegistration.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!updatedDriver) {
      return res.status(404).json({ success: false, message: 'Driver not found' });
    }
    res.status(200).json({
      success: true,
      message: 'Driver information updated successfully',
      data: {
        rating: 0.0, // You can provide a default rating here
        driverId: updatedDriver._id
      }
    });
  } catch (error) {
    res.status(500).json({ success: false, message: 'Failed to update driver information', error: error.message });
  }
};
